package ArcaneMissile
    import OnCast
    import Entity
    import PrintingHelper
    import CollisionProjectile
    import Arena
    import Vectors
    import Collisions
    import TimerUtils
    import Magician
    
    constant real COLLISION_SIZE = 28.
    constant real EXPLOSION_AOE = 180.
    constant string SFX_PATH = "war3mapImported\\ArcaneMissile.mdx"
    
    public class ArcaneMissile extends CollisionProjectile
        use OnPointCast
        
        
        construct( vec3 pos, string fxpath, real angle, real speed, real radius, player p )
            super( pos, radius, angle, fxpath, p )
            print("arcane missile")
            setTimed(0.4)
            fx.setScale(.70)
            setSpeed(speed)
            
        override function outOfBounds(Side side)
	        if active
	        	onTimeout()
            
        override function onTimeout()
        	DestroyEffect(AddSpecialEffect( "Units\\NightElf\\Wisp\\WispExplode.mdl", position.x, position.y))
            timer t = getTimer()
            t.setData(this castTo int)
            t.start(0.5, function onExplode)
            timed = false
            active = false
            velocity = vec3(0,0,0)

		override function onGround()
			
		override function inAir()
		
        override function onCollision(Entity e)
        	if active
            	onTimeout()
            
        
        override static function onPointCast(unit caster, int level, vec2 target)
        	let casterPos = caster.getPos()
        	let angle = casterPos.angleTo(target) * RADTODEG
            ArcaneMissile n = new ArcaneMissile( casterPos.withZ(45), SFX_PATH , angle, 12., COLLISION_SIZE, caster.getOwner() )
            n.fx.setZAngle(90.)
            
            
		static function onExplode()
			timer t = GetExpiredTimer()
			ArcaneMissile m = t.getData() castTo ArcaneMissile
			for Entity e in collisionEntities
				if e.owner != m.owner and m.position.inCircle( e.position, EXPLOSION_AOE ) and e instanceof Magician
					var angle = angleBetweenCoordsR( m.position.x, m.position.y,e.position.x, e.position.y)
					Magician ma = e castTo Magician
					ma.addForce(Cos(angle)*10, Sin(angle)*10, 0.)
			m.done = true
            
    init
        ArcaneMissile.registerSpellEvent('Q001')
        print("setup event Q")
        
endpackage
