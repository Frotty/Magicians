package PhysicalProjectile
	import public Entity
	import public Fx
	import public Terrain
	import public Physics
	

	
	public class PhysicalProjectile extends DynamicEntity
		Fx fx
		
		boolean gravityAffected = true
		
		boolean bounce = false
		real restitution = 1.
		real friction = 1.
		
		
		construct( vec3 pos, real radius, real angle, string sfxpath )
			super(pos, radius)	
			
			fx = new Fx(pos, angle, sfxpath)

			velocity = vec3( -14, 0, 20 )
			
		override function onGround()
			skip
			
		override function onCollision(Entity e)
			
		override function inAir()
			velocity += gravity
			
		override function update()
			super.update()	
			position += velocity	
			fx.setX(position.x)
			fx.setY(position.y)
			fx.setZ(position.z - terrainZ )
			//print(position.toString())
			
		function setTarget( real x, real y, real speed, real angle )
			var t = distanceBetweenCoords(position.x, position.y, x, y)/speed
			let e = getTerrainZ(x,y)
			
			if t < 300./speed
				t = 300./speed
			
			let startZVelocity = ((-gravity.z * t) / 2 - position.z/t + e/t)
			
			this.setForce( Cos(angle) * speed, Sin(angle) * speed, startZVelocity )
			update()
			
		ondestroy
			destroy fx
		
endpackage
